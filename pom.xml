<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>no.tusla</groupId>
  <artifactId>supplyservice</artifactId>
  <version>1.0.3-SNAPSHOT</version> <!-- Ver 1.0.3 for CDC -->
  <packaging>jar</packaging>

  <name>supplyservice</name>
  <description>Demo project for Spring Boot</description>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.5.9.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>
    <docker.image.name>tusla/supplyservice</docker.image.name>
    <docker.image.tag>concept4</docker.image.tag>
    <pact-broker.url>http://localhost:7072</pact-broker.url>
  </properties>

  <dependencies>
    <!-- Starter for web and test -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Actuator for health metrics -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <!-- Service Discovery on PCF -->
    <dependency>
      <groupId>io.pivotal.spring.cloud</groupId>
      <artifactId>
        spring-cloud-services-starter-service-registry
      </artifactId>
    </dependency>

    <!-- Spring cloud Security -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-security</artifactId>
      <version>1.2.1.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security.oauth</groupId>
      <artifactId>spring-security-oauth2</artifactId>
      <version>2.2.1.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-jwt</artifactId>
      <version>1.0.8.RELEASE</version>
    </dependency>

    <!-- Spring Cloud Contracts for CDC -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-contract-verifier</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- PACT CDC framework -->
    <!-- Consumer -->
    <dependency>
      <groupId>au.com.dius</groupId>
      <artifactId>pact-jvm-consumer-junit_2.11</artifactId>
      <version>3.5.8</version>
      <scope>test</scope>
    </dependency>
    <!-- Producer -->
    <dependency>
      <groupId>au.com.dius</groupId>
      <artifactId>pact-jvm-provider-junit_2.11</artifactId>
      <version>3.5.8</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-contract-dependencies</artifactId>
        <version>2.0.0.M5</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.pivotal.spring.cloud</groupId>
        <artifactId>
          spring-cloud-services-dependencies
        </artifactId>
        <version>1.3.1.RELEASE</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>


    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <!-- We use the Resources plugin to filer Dockerfile and run.sh, it inserts actual JAR filename -->
      <!-- The final Dockerfile will be created in target/dockerfile/Dockerfile -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <!-- here the phase you need -->
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/dockerfile</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/docker</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.4.10</version>
        <configuration>
          <imageName>${docker.image.name}:${docker.image.tag}</imageName>
          <dockerDirectory>${basedir}/target/dockerfile</dockerDirectory>
          <resources>
            <resource>
              <targetPath>/</targetPath>
              <directory>${project.build.directory}</directory>
              <include>${project.build.finalName}.jar</include>
            </resource>
          </resources>
        </configuration>
      </plugin>
      <!-- tag::contract_maven_plugin[] -->
      <plugin>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-contract-maven-plugin</artifactId>
        <version>2.0.0.M5</version>
        <extensions>true</extensions>
        <configuration>
          <packageWithBaseClasses>no.tusla.supplyservice.contract</packageWithBaseClasses>
        </configuration>
      </plugin>
      <!-- end::contract_maven_plugin[] -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <!-- Pact-broker plugin
      <plugin>
        <groupId>com.github.warmuuh</groupId>
        <artifactId>pactbroker-maven-plugin</artifactId>
        <version>0.0.10</version> Our own hacked fix
        <executions>
          <execution>
            <id>download-pacts</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>download-pacts</goal>
            </goals>
            <configuration>
              <brokerUrl>${pact-broker.url}</brokerUrl>
              <pacts>${project.build.testOutputDirectory}/pacts-dependents</pacts>
              <provider>${project.name}</provider>
            </configuration>
          </execution>
        </executions>
      </plugin>-->
    </plugins>
  </build>
  <repositories>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>https://repo.spring.io/release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>https://repo.spring.io/release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
  <distributionManagement>
    <snapshotRepository>
      <id>snapshots</id>
      <name>1f63cfa8-8afc-4030-7a57-f61f-snapshots</name>
      <url>http://artifactory.apps.cg.examples.cf:80/artifactory/libs-snapshot-local</url>
    </snapshotRepository>
  </distributionManagement>

</project>
